// <auto-generated />
using System;
using FitAirlines.WebAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitAirlines.WebAPI.Migrations
{
    [DbContext(typeof(FitAirlinesContext))]
    [Migration("20221019093617_testSeedCountry")]
    partial class testSeedCountry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Airports", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AirportID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isAvailable")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("AirportId");

                    b.HasIndex("AirportName")
                        .IsUnique()
                        .HasName("UQ__Airports__4E72794649BB424C");

                    b.HasIndex("CityId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Cities", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CountryId")
                        .HasColumnName("CountryID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortInfo")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Countries", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CountryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortInfo")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.HasKey("CountryId");

                    b.HasIndex("CountryName")
                        .IsUnique()
                        .HasName("UQ__Countrie__E056F2015A80FCED");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "Bosnia and Herzegovina"
                        });
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Flights", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FlightID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedByUserId")
                        .HasColumnName("AddedByUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AvailableToMemberTypeId")
                        .HasColumnName("AvailableToMemberTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<int>("DestinationAirportId")
                        .HasColumnName("DestinationAirportID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("FlightDuration")
                        .HasColumnType("time");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<int>("OfferId")
                        .HasColumnName("OfferID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PilotFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("PlaneId")
                        .HasColumnName("PlaneID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShortInfo")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<double?>("VoucherDiscountPercentage")
                        .HasColumnType("float");

                    b.HasKey("FlightId");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("AvailableToMemberTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("DestinationAirportId");

                    b.HasIndex("OfferId");

                    b.HasIndex("PlaneId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.MembershipTypes", b =>
                {
                    b.Property<int>("MembershipTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MembershipTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BasicFoodDrinkDiscount")
                        .HasColumnType("float");

                    b.Property<double>("BasicTicketDiscount")
                        .HasColumnType("float");

                    b.Property<bool>("IsBonusDrinkAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBonusMealAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExtraBaggageAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFitsandwichAvailable")
                        .HasColumnName("IsFITSandwichAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPriorityAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeatChangeAvailable")
                        .HasColumnType("bit");

                    b.Property<double>("MembershipPrice")
                        .HasColumnType("float");

                    b.Property<string>("ShortInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("MembershipTypeId");

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasName("UQ__Membersh__2CB664DCBC49163C");

                    b.ToTable("MembershipTypes");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.OfferTypes", b =>
                {
                    b.Property<int>("OfferTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OfferTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("OfferTypeId");

                    b.HasIndex("TypeName")
                        .IsUnique()
                        .HasName("UQ__OfferTyp__D4E7DFA86FF56EF0");

                    b.ToTable("OfferTypes");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Offers", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OfferID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("OfferName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("OfferTypeId")
                        .HasColumnName("OfferTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortInfo")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("OfferId");

                    b.HasIndex("OfferName")
                        .IsUnique()
                        .HasName("UQ__Offers__07109364D9E5093F");

                    b.HasIndex("OfferTypeId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Planes", b =>
                {
                    b.Property<int>("PlaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PlaneID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("NumberOfColumns")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((6))");

                    b.Property<string>("PlaneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PlaneId");

                    b.HasIndex("PlaneName")
                        .IsUnique()
                        .HasName("UQ__Planes__7372E2C6E4398C69");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Ratings", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RatingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<double>("RatingValue")
                        .HasColumnType("float");

                    b.Property<int>("ReservationId")
                        .HasColumnName("ReservationID")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Reservations", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ReservationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BaseTicketPrice")
                        .HasColumnType("float");

                    b.Property<int?>("CashierId")
                        .HasColumnName("CashierID")
                        .HasColumnType("int");

                    b.Property<int>("FlightId")
                        .HasColumnName("FlightID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ReservationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("TotalDiscountPercentage")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("CashierId");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.ReservedSeats", b =>
                {
                    b.Property<int>("ReservedSeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ReservedSeatID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("ReservationId")
                        .HasColumnName("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("SeatIndex")
                        .HasColumnType("int");

                    b.Property<double>("SeatPrice")
                        .HasColumnType("float");

                    b.HasKey("ReservedSeatId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservedSeats");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.UserRoles", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAbleToAddNewFlights")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewOffers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewPlaces")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewPlanes")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewReservations")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewUsers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddUserCredits")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperUser")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("UserRoleId");

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasName("UQ__UserRole__2CB664DCF252F501");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("MembershipTypeId")
                        .HasColumnName("MembershipTypeID")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserRoleId")
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ__Users__A9D10534A6A00C66")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("MembershipTypeId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Airports", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Cities", "City")
                        .WithMany("Airports")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK__Airports__CityID__2C3393D0")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Cities", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Countries", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__Cities__CountryI__276EDEB3")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Flights", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Users", "AddedByUser")
                        .WithMany("Flights")
                        .HasForeignKey("AddedByUserId")
                        .HasConstraintName("FK__Flights__AddedBy__5165187F")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.MembershipTypes", "AvailableToMemberType")
                        .WithMany("Flights")
                        .HasForeignKey("AvailableToMemberTypeId")
                        .HasConstraintName("FK__Flights__Availab__534D60F1")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Cities", "City")
                        .WithMany("Flights")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK__Flights__CityID__4D94879B")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Airports", "DestinationAirport")
                        .WithMany("Flights")
                        .HasForeignKey("DestinationAirportId")
                        .HasConstraintName("FK__Flights__Destina__4E88ABD4")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Offers", "Offer")
                        .WithMany("Flights")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK__Flights__OfferID__4F7CD00D")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Planes", "Plane")
                        .WithMany("Flights")
                        .HasForeignKey("PlaneId")
                        .HasConstraintName("FK__Flights__PlaneID__5070F446")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Offers", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.OfferTypes", "OfferType")
                        .WithMany("Offers")
                        .HasForeignKey("OfferTypeId")
                        .HasConstraintName("FK__Offers__OfferTyp__398D8EEE")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Ratings", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Reservations", "Reservation")
                        .WithMany("Ratings")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK__Ratings__Reserva__5EBF139D")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Reservations", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Users", "Cashier")
                        .WithMany("ReservationsCashier")
                        .HasForeignKey("CashierId")
                        .HasConstraintName("FK__Reservati__Cashi__5BE2A6F2");

                    b.HasOne("FitAirlines.WebAPI.Database.Flights", "Flight")
                        .WithMany("Reservations")
                        .HasForeignKey("FlightId")
                        .HasConstraintName("FK__Reservati__Fligh__5812160E")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Users", "User")
                        .WithMany("ReservationsUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reservati__UserI__571DF1D5")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.ReservedSeats", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Reservations", "Reservation")
                        .WithMany("ReservedSeats")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK__ReservedS__Reser__628FA481")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Users", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.MembershipTypes", "MembershipType")
                        .WithMany("Users")
                        .HasForeignKey("MembershipTypeId")
                        .HasConstraintName("FK__Users__Membershi__4AB81AF0")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.UserRoles", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK__Users__UserRoleI__49C3F6B7")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using FitAirlines.WebAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitAirlines.WebAPI.Migrations
{
    [DbContext(typeof(FitAirlinesContext))]
    [Migration("20221019155953_seedCountries2")]
    partial class seedCountries2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Airports", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AirportID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isAvailable")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("AirportId");

                    b.HasIndex("AirportName")
                        .IsUnique()
                        .HasName("UQ__Airports__4E72794649BB424C");

                    b.HasIndex("CityId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Cities", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CountryId")
                        .HasColumnName("CountryID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortInfo")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Countries", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CountryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortInfo")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.HasKey("CountryId");

                    b.HasIndex("CountryName")
                        .IsUnique()
                        .HasName("UQ__Countrie__E056F2015A80FCED");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "Poland",
                            ShortInfo = "Poland may not be an obvious holiday destination, but it has a lot to offer. It’s the perfect place for a weekend getaway, a skiing trip, or a peaceful beach escape. From impressive natural beauty, to rich history and mouthwatering food, here is why Poland should be number one on your travel wish list."
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "Croatia",
                            ShortInfo = "Thanks in part to that dazzling World Cup run, Croatia is buzzier than ever, although each year increasing numbers of travelers seek out this idyllic haven on the Adriatic, known for its richly historic and evocative cities, exceptional food and wine, and heavenly sailing waters."
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "New Zeland",
                            ShortInfo = "New Zealand is a tiny country. Made up of two rather remote islands (and many smaller ones) and with a population of just over four million people, it is not the most acessible place in the world to visit. Yet it remains one of the world greatest tourist destinations."
                        },
                        new
                        {
                            CountryId = 4,
                            CountryName = "Australia",
                            ShortInfo = "One of the most popular reasons to visit Australia is the snorkelling and scuba diving around the Great Barrier Reef. It’s the world’s largest living organism (so big that it has its own post box), and the entire Reef is bigger than the United Kingdom, Holland and Switzerland combined!"
                        },
                        new
                        {
                            CountryId = 5,
                            CountryName = "Japan",
                            ShortInfo = "All the beautiful ancient Buddhist temples and Shinto shrines are reason enough to visit Japan. One of the best-preserved cities in Japan, Kyoto offers something like 2,000 Buddhist temples and shrines within the limits of the Kansai Region city, while Nara is home to no less than 8 UNESCO World Heritage Sites."
                        },
                        new
                        {
                            CountryId = 6,
                            CountryName = "Thailand",
                            ShortInfo = "Whether visitors are staying in the Land of Smiles for one day or one month, Thai food is so delicious and diverse that visitors should never have to eat the same dish twice. Visitors will even find that the cuisine changes as their location does, keeping their food options interesting as they venture from one city to the next."
                        },
                        new
                        {
                            CountryId = 7,
                            CountryName = "Nepal",
                            ShortInfo = "Nepal still evades travellers’ bucket lists, and we for one can’t understand why: the views are stunning (you have jungle, lakes, and mountains), the people are friendly, it’s home to once-in-a-lifetime treks and it’s safe and affordable. So what are you waiting for? Here are our 17 reasons to visit Nepal in 2019."
                        },
                        new
                        {
                            CountryId = 8,
                            CountryName = "Botswana",
                            ShortInfo = "Botswana is rich in culture and wildlife, and here Botswana Holidays gives us not one, but six reasons that will definitely inspire you to visit this amazing country!"
                        },
                        new
                        {
                            CountryId = 9,
                            CountryName = "Latvia",
                            ShortInfo = "Also known to be the pearl of Baltic States, Latvia is located in the Baltic region in Northern Europe. It has an enchanting history, long and well established traditions and rich culture."
                        },
                        new
                        {
                            CountryId = 10,
                            CountryName = "Germany",
                            ShortInfo = "There’s no way around it: Germany has firmly established itself as a first rate travel destination, not just for the well-informed few but for the happy-go-lucky crowds of tourists from all over the world too; in case anyone wonders why: this country has much more to it than meets the eye (no rhyme intended)."
                        },
                        new
                        {
                            CountryId = 11,
                            CountryName = "France",
                            ShortInfo = "I do not need to convince you to come over to visit or live in France. France is still the top holiday’s destination in the world. Everyone seems to dream about coming to France and everyone is fascinated by France & French people and language of course."
                        },
                        new
                        {
                            CountryId = 12,
                            CountryName = "Spain",
                            ShortInfo = "Spain really does have it all, from incredible landscapes and beaches, to world-famous cuisine and rich history – not to mention fantastic museums and striking architecture."
                        },
                        new
                        {
                            CountryId = 13,
                            CountryName = "Portugal",
                            ShortInfo = "I bet you’ve probably checked most European destinations off your travel bucket list by now: the UK, France, Spain, Italy, Germany, Ireland, Austria, Switzerland… Have I missed any? Oh yeah! You should visit Portugal."
                        },
                        new
                        {
                            CountryId = 14,
                            CountryName = "Italy",
                            ShortInfo = "Italy isn’t just for travelers who crave the world’s best pizzas, pastas and wines. The food (and wine) in this uniquely boot-shaped country is one reason to add it to your bucket list, but the historic cities, snow-capped mountains, pristine coastlines and endless museums will assure you that one visit is not enough."
                        },
                        new
                        {
                            CountryId = 15,
                            CountryName = "Greece",
                            ShortInfo = "Want to visit Greece? Good choice! It’s a fantastic country that offers everything from beaches and islands to culture and history as well as delicious food and friendly locals."
                        },
                        new
                        {
                            CountryId = 16,
                            CountryName = "Switzerland",
                            ShortInfo = "Switzerland may seem relatively small as compared to other European nations but that certainly does not mean that it has less to offer. Rather, it has set itself apart from the rest of Europe – its unparalleled landscapes, peaceful environments and cosmopolitan cities."
                        },
                        new
                        {
                            CountryId = 17,
                            CountryName = "United Kingdom",
                            ShortInfo = "The United Kingdom is a great place to visit. In fact, England, Scotland, Wales and the Offshore Islands all offer great vacation and holiday destinations with something for everyone—singles, couples, and families."
                        },
                        new
                        {
                            CountryId = 18,
                            CountryName = "Uruguay",
                            ShortInfo = "Uruguay’s entire southeast coast is littered with beaches. The Río de la Plata River, the widest in the world, makes up the beaches in the south. As you go eastwards, you’ll see how the river water gradually mixes with the Atlantic Ocean, creating more blue and green beaches with bigger waves."
                        },
                        new
                        {
                            CountryId = 19,
                            CountryName = "Mexico",
                            ShortInfo = "Mexico is one of the year’s hottest destinations, what with its secret island escapes, Caribbean coastline and cosmopolitan capital city, as well as its thriving restaurant scene and quirky colonial towns that are ideal for day trips. "
                        },
                        new
                        {
                            CountryId = 20,
                            CountryName = "Canada",
                            ShortInfo = "The expanse of Canadas natural beauty, from mountains and glaciers to secluded lakes and forests, is almost unparalleled worldwide. But Canadas allure is not just the great outdoors."
                        },
                        new
                        {
                            CountryId = 21,
                            CountryName = "Vietnam",
                            ShortInfo = "Holidaymakers from these four countries will be permitted entry for up to 15 days without having to acquire documentation, while an e-visa will be necessary for for trips of up to 30 days."
                        },
                        new
                        {
                            CountryId = 22,
                            CountryName = "Indonesia",
                            ShortInfo = "Their itinerary has included rafting down the Ayung River and visiting the Jatiluwih rice terraces, after which they are expected to visit Jakarta, the Indonesian capital. Here are 15 reasons to follow them to the vast archipelago.   "
                        },
                        new
                        {
                            CountryId = 23,
                            CountryName = "Ireland",
                            ShortInfo = "With its scene-stealing natural beauty and multitude of things to see and do, Ireland is a dream tourist destination."
                        },
                        new
                        {
                            CountryId = 24,
                            CountryName = "Sri Lanka",
                            ShortInfo = "Dive with blue whales in season or watch spinner dolphins leap about in Kalpitiya. Sri Lanka also has 5,800 wild elephants ambling about and the biggest concentration of leopards in the world."
                        },
                        new
                        {
                            CountryId = 25,
                            CountryName = "Kenya",
                            ShortInfo = "Long after you have left Kenya, there are some things that will stay with you forever – little treasures, both tangible and intangible."
                        },
                        new
                        {
                            CountryId = 26,
                            CountryName = "Albania",
                            ShortInfo = "Currently becoming one of the world’s most sought-after travel destinations, Albania is growing fast to accommodate visitors but also staying true to its strong rural culture. From beautiful nature to the more modern urban attractions, there’s so much to discover."
                        },
                        new
                        {
                            CountryId = 27,
                            CountryName = "India",
                            ShortInfo = "According to the biennial World Economic Forum (WEF) Travel and Tourism Competitiveness Report, India ranks 10th best for “price competitiveness”. Luxurious accommodation is relatively affordable, eating out cost very little indeed, and you can get around the country by train for peanuts."
                        },
                        new
                        {
                            CountryId = 28,
                            CountryName = "Wales",
                            ShortInfo = "If you love hearty food, a distinct culture, the outdoors, cosy pubs, fascinating traditions and breathtaking scenery then Wales is for you. It’s never easy to sum up a whole country but if you’re considering a visit to the land of song, here are the top 12 reasons why you should go ahead and do it."
                        },
                        new
                        {
                            CountryId = 29,
                            CountryName = "Morocco",
                            ShortInfo = "North Africa’s Morocco is a popular destination, attracting culture lovers, backpackers, adventure travelers, couples, families, foodies, and more."
                        },
                        new
                        {
                            CountryId = 30,
                            CountryName = "Netherlands",
                            ShortInfo = "Finding an excuse to visit the Netherlands is rarely difficult, thanks to the nation’s charming cities, beautiful countryside, and world-leading cultural attractions. For some additional motivation, we’ve put together the following list of top reasons to visit the Netherlands at least once."
                        },
                        new
                        {
                            CountryId = 31,
                            CountryName = "Colombia",
                            ShortInfo = "You do not need to be a huge expert in the sociopolitical history of Latin America in the last half-century to know that Colombia has not always been a country you would consider as a holiday option."
                        },
                        new
                        {
                            CountryId = 32,
                            CountryName = "Philippines",
                            ShortInfo = "The Philippines will never fail to amaze you. The stunning sights above and under the sea, the culture, the hospitality, the food, and of course, the friendly people willing to welcome visitors wherever and whenever."
                        });
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Flights", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FlightID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedByUserId")
                        .HasColumnName("AddedByUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AvailableToMemberTypeId")
                        .HasColumnName("AvailableToMemberTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<int>("DestinationAirportId")
                        .HasColumnName("DestinationAirportID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("FlightDuration")
                        .HasColumnType("time");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<int>("OfferId")
                        .HasColumnName("OfferID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PilotFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("PlaneId")
                        .HasColumnName("PlaneID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShortInfo")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<double?>("VoucherDiscountPercentage")
                        .HasColumnType("float");

                    b.HasKey("FlightId");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("AvailableToMemberTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("DestinationAirportId");

                    b.HasIndex("OfferId");

                    b.HasIndex("PlaneId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.MembershipTypes", b =>
                {
                    b.Property<int>("MembershipTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MembershipTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BasicFoodDrinkDiscount")
                        .HasColumnType("float");

                    b.Property<double>("BasicTicketDiscount")
                        .HasColumnType("float");

                    b.Property<bool>("IsBonusDrinkAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBonusMealAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExtraBaggageAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFitsandwichAvailable")
                        .HasColumnName("IsFITSandwichAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPriorityAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeatChangeAvailable")
                        .HasColumnType("bit");

                    b.Property<double>("MembershipPrice")
                        .HasColumnType("float");

                    b.Property<string>("ShortInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("MembershipTypeId");

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasName("UQ__Membersh__2CB664DCBC49163C");

                    b.ToTable("MembershipTypes");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.OfferTypes", b =>
                {
                    b.Property<int>("OfferTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OfferTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("OfferTypeId");

                    b.HasIndex("TypeName")
                        .IsUnique()
                        .HasName("UQ__OfferTyp__D4E7DFA86FF56EF0");

                    b.ToTable("OfferTypes");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Offers", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OfferID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("OfferName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("OfferTypeId")
                        .HasColumnName("OfferTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortInfo")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("OfferId");

                    b.HasIndex("OfferName")
                        .IsUnique()
                        .HasName("UQ__Offers__07109364D9E5093F");

                    b.HasIndex("OfferTypeId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Planes", b =>
                {
                    b.Property<int>("PlaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PlaneID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("NumberOfColumns")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((6))");

                    b.Property<string>("PlaneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PlaneId");

                    b.HasIndex("PlaneName")
                        .IsUnique()
                        .HasName("UQ__Planes__7372E2C6E4398C69");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Ratings", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RatingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<double>("RatingValue")
                        .HasColumnType("float");

                    b.Property<int>("ReservationId")
                        .HasColumnName("ReservationID")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Reservations", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ReservationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BaseTicketPrice")
                        .HasColumnType("float");

                    b.Property<int?>("CashierId")
                        .HasColumnName("CashierID")
                        .HasColumnType("int");

                    b.Property<int>("FlightId")
                        .HasColumnName("FlightID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ReservationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("TotalDiscountPercentage")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("CashierId");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.ReservedSeats", b =>
                {
                    b.Property<int>("ReservedSeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ReservedSeatID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("ReservationId")
                        .HasColumnName("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("SeatIndex")
                        .HasColumnType("int");

                    b.Property<double>("SeatPrice")
                        .HasColumnType("float");

                    b.HasKey("ReservedSeatId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservedSeats");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.UserRoles", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAbleToAddNewFlights")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewOffers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewPlaces")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewPlanes")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewReservations")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddNewUsers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbleToAddUserCredits")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperUser")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("UserRoleId");

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasName("UQ__UserRole__2CB664DCF252F501");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("MembershipTypeId")
                        .HasColumnName("MembershipTypeID")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserRoleId")
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ__Users__A9D10534A6A00C66")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("MembershipTypeId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Airports", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Cities", "City")
                        .WithMany("Airports")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK__Airports__CityID__2C3393D0")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Cities", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Countries", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__Cities__CountryI__276EDEB3")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Flights", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Users", "AddedByUser")
                        .WithMany("Flights")
                        .HasForeignKey("AddedByUserId")
                        .HasConstraintName("FK__Flights__AddedBy__5165187F")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.MembershipTypes", "AvailableToMemberType")
                        .WithMany("Flights")
                        .HasForeignKey("AvailableToMemberTypeId")
                        .HasConstraintName("FK__Flights__Availab__534D60F1")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Cities", "City")
                        .WithMany("Flights")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK__Flights__CityID__4D94879B")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Airports", "DestinationAirport")
                        .WithMany("Flights")
                        .HasForeignKey("DestinationAirportId")
                        .HasConstraintName("FK__Flights__Destina__4E88ABD4")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Offers", "Offer")
                        .WithMany("Flights")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK__Flights__OfferID__4F7CD00D")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Planes", "Plane")
                        .WithMany("Flights")
                        .HasForeignKey("PlaneId")
                        .HasConstraintName("FK__Flights__PlaneID__5070F446")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Offers", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.OfferTypes", "OfferType")
                        .WithMany("Offers")
                        .HasForeignKey("OfferTypeId")
                        .HasConstraintName("FK__Offers__OfferTyp__398D8EEE")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Ratings", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Reservations", "Reservation")
                        .WithMany("Ratings")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK__Ratings__Reserva__5EBF139D")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Reservations", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Users", "Cashier")
                        .WithMany("ReservationsCashier")
                        .HasForeignKey("CashierId")
                        .HasConstraintName("FK__Reservati__Cashi__5BE2A6F2");

                    b.HasOne("FitAirlines.WebAPI.Database.Flights", "Flight")
                        .WithMany("Reservations")
                        .HasForeignKey("FlightId")
                        .HasConstraintName("FK__Reservati__Fligh__5812160E")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.Users", "User")
                        .WithMany("ReservationsUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reservati__UserI__571DF1D5")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.ReservedSeats", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.Reservations", "Reservation")
                        .WithMany("ReservedSeats")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK__ReservedS__Reser__628FA481")
                        .IsRequired();
                });

            modelBuilder.Entity("FitAirlines.WebAPI.Database.Users", b =>
                {
                    b.HasOne("FitAirlines.WebAPI.Database.MembershipTypes", "MembershipType")
                        .WithMany("Users")
                        .HasForeignKey("MembershipTypeId")
                        .HasConstraintName("FK__Users__Membershi__4AB81AF0")
                        .IsRequired();

                    b.HasOne("FitAirlines.WebAPI.Database.UserRoles", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK__Users__UserRoleI__49C3F6B7")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
